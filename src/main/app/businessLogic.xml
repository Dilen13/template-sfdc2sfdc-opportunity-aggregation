<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" version="EE-3.5.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd">
    <data-mapper:config name="maptocsv" transformationGraphPath="maptocsv.grf" doc:name="maptocsv"/>

        <flow name="mainFlow" doc:name="mainFlow" doc:description="This flow is the entry point to the Kick business logic.

This flow should control the direction of the application, and it should be called by the different endpoints that your Kick exposes to trigger it.">
        <flow-ref name="gatherDataFlow" doc:name="call gatherDataFlow"/>
        <flow-ref name="aggregationFlow" doc:name="call aggregationFlow"/> 
        <flow-ref name="formatOutputFlow" doc:name="call formatOutputFlow"/>
        <flow-ref name="outboundFlow" doc:name="call outboundFlow"/>
        <exception-strategy ref="defaultChoiceExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
  
    <sub-flow name="gatherDataFlow" doc:name="gatherDataFlow">
        <enricher source="#[payload]" target="#[flowVars['opportunitiesFromOrgA']]" doc:name="Store result in FlowVar 'opportunitiesFromOrgA'">
            <sfdc:query config-ref="SalesforceA" query="dsql:SELECT Id, Name, Amount FROM Opportunity" doc:name="query all accounts from SalesForce instance A"/>
        </enricher>
 
        <enricher source="#[payload]" target="#[flowVars['opportunitiesFromOrgB']]" doc:name="Store result in FlowVar 'opportunitiesFromOrgB'">
            <sfdc:query config-ref="SalesforceB" query="dsql:SELECT Id, Name, Amount FROM Opportunity" doc:name="query all accounts from SalesForce instance A"/>
        </enricher>
    </sub-flow>

    <sub-flow name="aggregationFlow" doc:name="aggregationFlow">
        <custom-transformer class="org.mule.templates.transformers.SFDCOpportunitiesMerge" doc:name="Custom component to build merged opportunity list"/>
    </sub-flow>
    
    <sub-flow name="formatOutputFlow" doc:name="formatOutputFlow">
        <custom-transformer class="org.mule.templates.transformers.SortOpportunitiesList" doc:name="Custom component to sort opportunities list"/>
        <data-mapper:transform config-ref="maptocsv" doc:name="mapToCsv"/>

        <object-to-string-transformer doc:name="CSV Output Object to String"/>
    </sub-flow>
</mule>
